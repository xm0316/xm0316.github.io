<?xml version="1.0" encoding="utf-8"?>
<search>
  
  
  
  <entry>
    <title>Git commands</title>
    <link href="/2023/08/28/Git-commands/"/>
    <url>/2023/08/28/Git-commands/</url>
    
    <content type="html"><![CDATA[<p>Git 的一些命令操作</p><span id="more"></span><p><img src="./GitHub_Logo.png"></p><h1 id="Git-的操作"><a href="#Git-的操作" class="headerlink" title="Git 的操作"></a>Git 的操作</h1><h2 id="安装"><a href="#安装" class="headerlink" title="安装"></a>安装</h2><h3 id="安装设置"><a href="#安装设置" class="headerlink" title="安装设置"></a>安装设置</h3><ul><li>git config –global user.name&#x2F;email “…”</li></ul><h3 id="与-GitHub-关联"><a href="#与-GitHub-关联" class="headerlink" title="与 GitHub 关联"></a>与 GitHub 关联</h3><ul><li><p>生成 ssh key</p><ul><li>ssh-key -t rsa -C “…email”</li></ul></li><li><p>repository 关联</p><ul><li><p>Remote：create a new repo</p></li><li><p>Local：关联</p><ul><li><p>http 协议 or ssh 协议</p><ul><li>https 协议每次 push 需要输入密码</li></ul></li><li><p>associate</p><ul><li>git remote add origin <a href="mailto:&#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#x6d;">&#103;&#105;&#116;&#x40;&#x67;&#x69;&#x74;&#104;&#x75;&#x62;&#46;&#99;&#x6f;&#x6d;</a>：xm0316&#x2F;Git_command.git<br>git branch -M main<br>git push -u origin main # origin：远程仓库名，main：本地仓库主分支名</li></ul></li></ul></li><li><p>删除关联关系</p><ul><li><code>git remote -v</code> 查看远程库信息</li><li>git remote rm origin(远程分支名称)</li></ul></li></ul></li></ul><h2 id="文件操作"><a href="#文件操作" class="headerlink" title="文件操作"></a>文件操作</h2><h3 id="创建版本库-repo"><a href="#创建版本库-repo" class="headerlink" title="创建版本库 repo"></a>创建版本库 repo</h3><ul><li>git init</li></ul><h3 id="本地文件提交"><a href="#本地文件提交" class="headerlink" title="本地文件提交"></a>本地文件提交</h3><ul><li><p>添加文件到暂存区</p><ul><li><p>git add “…”</p><ul><li>git add –all</li></ul></li></ul></li><li><p>提交文件到版本库(本地仓库)</p><ul><li><p>git commit -m “…提交说明”</p><ul><li>git commit -am “…提交说明”，直接提交到版本库</li></ul></li></ul></li></ul><h3 id="文件比较-diff"><a href="#文件比较-diff" class="headerlink" title="文件比较 diff"></a>文件比较 diff</h3><ul><li><p>git status</p><ul><li>掌握仓库当前的状态&#x2F;变化情况</li></ul></li><li><p>git diff</p><ul><li><p>查看文件在工作目录与暂存区的差别。<br>如果还没 add 进暂存区，则查看文件自身修改前后的差别。</p><ul><li>git diff –stat： 显示变化摘要而非整个 diff</li></ul></li><li><p>git diff –staged&#x2F;cached</p><ul><li>查看暂存区与版本库的区别</li></ul></li><li><p>git diff <commit> <filename></p><ul><li>查看工作目录同 Git 仓库指定 commit 的内容的差异。</li><li><commit>&#x3D;HEAD 时：查看工作目录同最近一次 commit 的内容的差异。</li></ul></li></ul></li></ul><h3 id="查看提交日志"><a href="#查看提交日志" class="headerlink" title="查看提交日志"></a>查看提交日志</h3><ul><li><p>git log</p><ul><li>显示从最近到最远的全部日志</li></ul></li><li><p>git log –pretty&#x3D;oneline</p><ul><li>单行显示日志(还有其他的参数)</li></ul></li><li><p>git reflog</p><ul><li><p>显示可引用的历史版本记录</p><ul><li>按提交的命令显示，可以查看任意的提交点</li></ul></li></ul></li></ul><h3 id="版本回退-reset"><a href="#版本回退-reset" class="headerlink" title="版本回退 reset"></a>版本回退 reset</h3><ul><li><p>在 Git 中，用 HEAD 代表当前版本，上一个版本就是<code>HEAD^</code>，再上一个版本就是<code>HEAD^^</code>，依次类推,更多的可以使用<code>HEAD~100</code></p></li><li><p>git reset –hard <commit_id></p><ul><li>回到指定的已提交版本，丢弃版本库的变化</li></ul></li></ul><h3 id="管理修改"><a href="#管理修改" class="headerlink" title="管理修改"></a>管理修改</h3><ul><li><p>git 跟踪并管理的是修改(暂存区的文件)</p></li><li><p>git diff HEAD – <filename></p><ul><li>查看工作区和版本库最新版本的区别，指定版本见之前的命令</li></ul></li></ul><h3 id="撤销修改"><a href="#撤销修改" class="headerlink" title="撤销修改"></a>撤销修改</h3><ul><li><p>git status：检查文件变化&#x2F;修改情况</p></li><li><p>丢弃工作区的修改</p><ul><li><p>git check –<file></p><ul><li>git restore <file></li></ul></li></ul></li><li><p>丢弃暂存区的修改</p><ul><li><p>git reset HEAD <file></p><ul><li>git restore –stage <file></li></ul></li></ul></li><li><p>丢弃版本库的修改</p><ul><li><p>git reset –hard <commit_id></p><ul><li><code>--- HEAD^</code></li></ul></li></ul></li></ul><h3 id="删除文件"><a href="#删除文件" class="headerlink" title="删除文件"></a>删除文件</h3><ul><li><p>从版本库中删除一个文件</p><ul><li>git rm <file></li><li>并且提交：git commit -m “…”</li></ul></li><li><p>从版本库恢复文件</p><ul><li>git checkout – <file></li><li>用版本库的版本替换工作区的版本</li></ul></li></ul><h2 id="远程仓库"><a href="#远程仓库" class="headerlink" title="远程仓库"></a>远程仓库</h2><h3 id="添加远程仓库"><a href="#添加远程仓库" class="headerlink" title="添加远程仓库"></a>添加远程仓库</h3><ul><li><p>GitHub 上的仓库既可以作为备份，又可以让其他人通过该仓库来协作</p></li><li><p>关联远程仓库</p><ul><li>git remote add origin <a href="mailto:&#103;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#109;">&#103;&#x69;&#116;&#x40;&#x67;&#105;&#116;&#104;&#x75;&#98;&#x2e;&#99;&#111;&#109;</a>：账户名&#x2F;仓库名.git</li></ul></li><li><p>首次推送</p><ul><li>git branch -M main (给本地仓库改名)<br>git push -u origin master</li><li>git push origin master</li></ul></li><li><p>SSH 警告</p><ul><li>首次使用 Git 的 clone 或 push 命令连接 github 时，会提示你验证 RSA key 信息</li></ul></li></ul><h3 id="删除远程仓库"><a href="#删除远程仓库" class="headerlink" title="删除远程仓库"></a>删除远程仓库</h3><ul><li><p>查看远程库信息</p><ul><li>git remote -v</li></ul></li><li><p>解除远程库和本地库的绑定关系</p><ul><li>git remote rm origin</li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Blog</category>
      
      <category>Git</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
      <tag>Git</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Windows中的tree命令.md</title>
    <link href="/2023/08/27/Windows%E4%B8%AD%E7%9A%84tree%E5%91%BD%E4%BB%A4/"/>
    <url>/2023/08/27/Windows%E4%B8%AD%E7%9A%84tree%E5%91%BD%E4%BB%A4/</url>
    
    <content type="html"><![CDATA[<!-- more --><h1 id="Windows-中的-tree-命令"><a href="#Windows-中的-tree-命令" class="headerlink" title="Windows 中的 tree 命令"></a>Windows 中的 tree 命令</h1><h2 id="tree-命令"><a href="#tree-命令" class="headerlink" title="tree 命令"></a>tree 命令</h2><p>树状目录结构，经常可以在一些文章中看到，可以非常直观看到在哪些文件夹中有哪些资源.</p><p>Windows 系统中自带的<code>tree</code>命令可以生成下面的树状目录。</p><figure class="highlight markdown"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br><span class="line">21</span><br><span class="line">22</span><br></pre></td><td class="code"><pre><code class="hljs markdown">E:.<br>├─languages<br>├─layout<br>│ ├─<span class="hljs-emphasis">_partial</span><br><span class="hljs-emphasis">│ │ ├─post</span><br><span class="hljs-emphasis">│ │ └─theme</span><br><span class="hljs-emphasis">│ │ └─simple</span><br><span class="hljs-emphasis">│ └─_</span>widget<br>├─scripts<br>│ ├─filter<br>│ └─helper<br>└─source<br>├─css<br>│ ├─semantic-ui<br>│ │ └─2.2.4<br>│ │ └─themes<br>│ │ └─default<br>│ │ └─assets<br>│ │ └─fonts<br>│ └─<span class="hljs-emphasis">_partial</span><br><span class="hljs-emphasis">├─images</span><br><span class="hljs-emphasis">└─js</span><br></code></pre></td></tr></table></figure><p>tree 命令部分常用命令</p><p>格式：</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">tree <span class="hljs-selector-attr">[drive:]</span><span class="hljs-selector-attr">[path]</span> options<br></code></pre></td></tr></table></figure><table><thead><tr><th>命令</th><th>释义</th></tr></thead><tbody><tr><td>tree -a</td><td>显示所有</td></tr><tr><td>tree -d</td><td>只显示文档夹</td></tr><tr><td>tree -L n</td><td>显示项目的层级，n 表示层级数，比如想要显示项目三层结构，可以用 tree -l 3；</td></tr><tr><td>tree -I pattern</td><td>用于过滤不想要显示的文档或者文档夹。比如你想要过滤项目中的 node_modules 文档夹，可以使用 tree -I “node_modules”；</td></tr><tr><td>tree &gt; tree.md</td><td>将项目结构输出到 tree.md 这个文档</td></tr><tr><td>tree -N</td><td>防止中文名乱码</td></tr><tr><td>tree -F</td><td>仅显示文件的名称（带扩展名）</td></tr></tbody></table><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs text">-a 显示所有文件和目录。<br>-A 使用ASNI绘图字符显示树状图而非以ASCII字符组合。<br>-C 在文件和目录清单加上色彩，便于区分各种类型。<br>-d 显示目录名称而非内容。<br>-D 列出文件或目录的更改时间。<br>-f 在每个文件或目录之前，显示完整的相对路径名称。<br>-F 在执行文件，目录，Socket，符号连接，管道名称名称，各自加上&quot;*&quot;,&quot;/&quot;,&quot;=&quot;,&quot;@&quot;,&quot;|“号。<br>-g 列出文件或目录的所属群组名称，没有对应的名称时，则显示群组识别码。<br>-i 不以阶梯状列出文件或目录名称。<br>-I 不显示符合范本样式的文件或目录名称。<br>-l 如遇到性质为符号连接的目录，直接列出该连接所指向的原始目录。<br>-n 不在文件和目录清单加上色彩。<br>-N 直接列出文件和目录名称，包括控制字符。<br>-p 列出权限标示。<br>-P 只显示符合范本样式的文件或目录名称。<br>-q 用”?&quot;号取代控制字符，列出文件和目录名称。<br>-s 列出文件或目录大小。<br>-t 用文件和目录的更改时间排序。<br>-u 列出文件或目录的拥有者名称，没有对应的名称时，则显示用户识别码。<br>-x 将范围局限在现行的文件系统中，若指定目录下的某些子目录，其存放于另一个文件系统上，则将该子目录予以排除在寻找范围外。<br></code></pre></td></tr></table></figure><h2 id="markdown-中引入树状目录"><a href="#markdown-中引入树状目录" class="headerlink" title="markdown 中引入树状目录"></a>markdown 中引入树状目录</h2><p>markdown 中无法直接生成树状目录，通过<code>tree</code>命令将生成的目录复制到 md 文档中</p><p>使用<code>tree /f &gt; tree.txt</code>，将目录生成到<code>tree.txt</code>文本文件中，然后打开文本文件复制到 markdwon 的代码区中</p><blockquote><p>使用&#96;&#96;&#96;text 开启代码块</p></blockquote>]]></content>
    
    
    <categories>
      
      <category>Notes</category>
      
      <category>Windows</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Windows</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo Fluid主题配置</title>
    <link href="/2023/08/27/Hexo-Fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/"/>
    <url>/2023/08/27/Hexo-Fluid%E4%B8%BB%E9%A2%98%E9%85%8D%E7%BD%AE/</url>
    
    <content type="html"><![CDATA[<h1 id="Hexo-Fluid-主题配置"><a href="#Hexo-Fluid-主题配置" class="headerlink" title="Hexo Fluid 主题配置"></a>Hexo Fluid 主题配置</h1><h3 id="0-前言"><a href="#0-前言" class="headerlink" title="0. 前言"></a>0. 前言</h3><p>Hexo 搭建好的博客是使用<code>landscape</code>主题，看起来挺丑的…不是很喜欢，所以我们到 hexo 官网上寻找一些好看的主题进行更改。</p><blockquote><p>hexo 主题网站： <a href="https://hexo.io/themes/">https://hexo.io/themes/</a></p></blockquote><p>这里有几百个主题供你选择，由于太多而且网站中也没有对这些主题进行筛选的功能，让人难以选择，所以我们推荐到 github 上寻找合适的主题：</p><p><img src="./53ecfe4827b789a28e4c8181e8a3a208-1693620082088-2.png"></p><p><img src="./20210607133049.png"></p><p>从而可以看出，最受欢迎的是<code>Next主题</code>，还有几个主题的 star 数也不少，大家根据自己的喜好挑选即可。</p><p>浅谈几个挑选合适主题的标准：</p><ul><li>star 数、fork 数多的</li><li>使用文档写的比较详细的</li><li>更新时间比较近的，或者更新频率比较高的</li></ul><h3 id="1-Fluid-主题介绍"><a href="#1-Fluid-主题介绍" class="headerlink" title="1. Fluid 主题介绍"></a>1. Fluid 主题介绍</h3><p><img src="./20210607135407.png"></p><blockquote><p>这是一款 Material Design 风格的 Hexo 主题，以简约的设计帮助你专注于写作</p></blockquote><p><a href="https://github.com/fluid-dev/hexo-theme-fluid">Fluid 主题仓库地址</a></p><p><img src="./ed070cdf70417b5821186e4d6753a0d5.png"></p><p><img src="./5965f26ed2367d660c60b27932b5bcbd.png"></p><p>整体上，简约风，个人是比较喜爱的。最重要的是这个主题的文档写得非常地详细，查起来非常容易，上手快。</p><h3 id="2-安装"><a href="#2-安装" class="headerlink" title="2. 安装"></a>2. 安装</h3><p>安装的话，<code>github</code>的<code>README.md</code>文档写的很清楚了</p><p>这里直接复制粘贴一下：</p><p><strong>方式一：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">npm install --save hexo-theme-fluid<br></code></pre></td></tr></table></figure><p>然后在博客目录下创建 <code>_config.fluid.yml</code>，将主题的 <code>_config.yml</code>内容复制进去。</p><p><strong>方式二：</strong></p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">git <span class="hljs-built_in">clone</span> https://github.com/fluid-dev/hexo-theme-fluid.git<br></code></pre></td></tr></table></figure><p>或者直接下载压缩文件，解压后放到<code>/themes</code>目录，将解压出来的文件夹命名为<code>/fluid</code></p><h3 id="3-修改配置"><a href="#3-修改配置" class="headerlink" title="3. 修改配置"></a>3. 修改配置</h3><p>修改 Hexo 博客目录中的 <code>_config.yml</code>：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">theme:</span> <span class="hljs-string">fluid</span> <span class="hljs-comment"># 指定主题</span><br><span class="hljs-attr">language:</span> <span class="hljs-string">zh-CN</span> <span class="hljs-comment"># 指定语言，会影响主题显示的语言，按需修改</span><br></code></pre></td></tr></table></figure><h3 id="4-创建页"><a href="#4-创建页" class="headerlink" title="4. 创建页"></a>4. 创建页</h3><p>首次使用主题的「关于页」需要手动创建：</p><figure class="highlight shell"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs shell">hexo new page about<br></code></pre></td></tr></table></figure><p>创建成功后，编辑博客目录下 <code>/source/about/index.md</code>，添加 <code>layout</code> 属性。</p><p>修改后的文件示例如下：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2020-02-23 19:20:33</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">这里写关于页的正文，支持</span> <span class="hljs-string">Markdown,</span> <span class="hljs-string">HTML</span><br></code></pre></td></tr></table></figure><p><strong>分类页、标签类也类似</strong></p><p>创建了这两个页，在写文章的时候，在最前面写上对应的 category、tags 即可</p><p>例如：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">使用Hexo搭建博客（基础版）</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">https://gitee.com/youlan_lan/md_image/raw/master/20210607012255.png</span><br><span class="hljs-attr">categories:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">博客搭建</span><br><span class="hljs-attr">tags:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">博客搭建</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">node</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">git</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">github</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><p>具体的参数可以查阅官方文档： <a href="https://hexo.io/zh-cn/docs/front-matter">https://hexo.io/zh-cn/docs/front-matter</a></p><h3 id="5-编写文章的使用心得"><a href="#5-编写文章的使用心得" class="headerlink" title="5. 编写文章的使用心得"></a>5. <strong>编写文章的使用心得</strong></h3><h4 id="1-通过命令创建新的-md-文档"><a href="#1-通过命令创建新的-md-文档" class="headerlink" title="1. 通过命令创建新的 md 文档"></a>1. 通过命令创建新的 md 文档</h4><p>你可以执行下列命令来创建一篇新文章或者新的页面。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs sh">$ hexo new [layout] &lt;title&gt;<br><span class="hljs-comment"># 不需要加后缀: .md</span><br></code></pre></td></tr></table></figure><p>文章的布局（layout）是文章所属的类型，默认为 <code>post</code>，可以通过修改 <code>_config.yml</code> 中的 <code>default_layout</code> 参数来指定默认布局。</p><p>文档目录如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br></pre></td><td class="code"><pre><code class="hljs text">_posts<br>    │  Hexo-Fluid主题配置.md<br>    │<br>    └─ Hexo-Fluid主题配置<br>            0037bdcc543cb7a9745ddb84f3c59960.png<br>            02df274a04b79deedbc2749a9840740b.png<br>...<br></code></pre></td></tr></table></figure><p>接下来， 把已编辑好的文件复制到该文件中，清除并重新生成，在本地查看格式和内容。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server --port 80 --open<br></code></pre></td></tr></table></figure><h4 id="2-静态图片渲染问题"><a href="#2-静态图片渲染问题" class="headerlink" title="2. 静态图片渲染问题"></a>2. 静态图片渲染问题</h4><p>官方使用<code>hexo-render-marked</code>渲染插件配合<code>post_asset_folder</code>。</p><p>开启了<code>post_asset_folder</code>以后每次<code>hexo new &#39;blogtitle&#39;</code>的时候，就会在<code>source/_post/</code>里面生成<code>blogtilte.md</code>和<code>/blogtitle/</code>的文件夹。所以在根目录下的<code>_config.yml</code>中配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post_asset_folder:</span> <span class="hljs-literal">true</span> <span class="hljs-comment"># 相对路径图片</span><br><span class="hljs-attr">marked:</span><br>  <span class="hljs-attr">prependRoot:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">postAsset:</span> <span class="hljs-literal">true</span><br></code></pre></td></tr></table></figure><p>但是，渲染之后还是找不到图片。因为在<code>marked</code>配置中将图片渲染为绝对路径 &#x3D;&gt; (‘&#x2F;blogtitle&#x2F;imagetitle.png’)。而 hexo 渲染文章时，会生成日期对应的文件夹，相对于根目录<code>public</code>，完整路径是（‘&#x2F;01&#x2F;5&#x2F;blogtitle&#x2F;imagetitle.png’），所以按绝对路径找不到。</p><blockquote><p>解决办法：修改渲染<code>renderer.js</code></p></blockquote><p>在渲染插件<code>hexo-render-marked</code>中的 lib&#x2F;renderer.js 中第 135 行添加以下内容，转换为相对路径：</p><figure class="highlight js"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br></pre></td><td class="code"><pre><code class="hljs js"><span class="hljs-comment">/**</span><br><span class="hljs-comment"> * 以下为Xu-pixel添加，解决markdown编辑器和渲染结果路径不同而导致的写作体验不佳问题</span><br><span class="hljs-comment"> */</span><br><span class="hljs-keyword">let</span> hrefSplitList = href.<span class="hljs-title function_">split</span>(<span class="hljs-string">&quot;/&quot;</span>);<br>hrefSplitList.<span class="hljs-title function_">shift</span>();<br>hrefSplitList.<span class="hljs-title function_">shift</span>();<br>hrefSplitList.<span class="hljs-title function_">unshift</span>(<span class="hljs-string">&quot;.&quot;</span>);<br>href = hrefSplitList.<span class="hljs-title function_">join</span>(<span class="hljs-string">&quot;/&quot;</span>);<br><span class="hljs-comment">//以上为Xu-pixel添加</span><br></code></pre></td></tr></table></figure><h4 id="3-fluid-主题开启评论"><a href="#3-fluid-主题开启评论" class="headerlink" title="3. fluid 主题开启评论"></a>3. fluid 主题开启评论</h4><p>在配置文件<code>_config.fluid.yaml</code>中的文章页（Post Page）部分开启并配置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">post:</span><br>  <span class="hljs-attr">comments:</span><br>    <span class="hljs-attr">enable:</span> <span class="hljs-literal">true</span><br>    <span class="hljs-attr">type:</span> <span class="hljs-string">valine</span><br></code></pre></td></tr></table></figure><p>然后在下方评论插件（Comment plugins）部分设置对应评论模块的参数，比如<code>valine</code>对应设置：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br><span class="line">19</span><br><span class="line">20</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-comment"># Valine</span><br><span class="hljs-comment"># 基于 LeanCloud</span><br><span class="hljs-comment"># Based on LeanCloud</span><br><span class="hljs-comment"># See: https://valine.js.org/</span><br><span class="hljs-attr">valine:</span><br>  <span class="hljs-attr">appId:</span> <span class="hljs-string">Tw****************88</span><br>  <span class="hljs-attr">appKey:</span> <span class="hljs-string">xs****************67</span><br>  <span class="hljs-attr">path:</span> <span class="hljs-string">window.location.pathname</span><br>  <span class="hljs-attr">placeholder:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">avatar:</span> <span class="hljs-string">&quot;retro&quot;</span><br>  <span class="hljs-attr">meta:</span> [<span class="hljs-string">&quot;nick&quot;</span>, <span class="hljs-string">&quot;mail&quot;</span>, <span class="hljs-string">&quot;link&quot;</span>]<br>  <span class="hljs-attr">requiredFields:</span> []<br>  <span class="hljs-attr">pageSize:</span> <span class="hljs-number">10</span><br>  <span class="hljs-attr">lang:</span> <span class="hljs-string">&quot;zh-CN&quot;</span><br>  <span class="hljs-attr">highlight:</span> <span class="hljs-literal">false</span><br>  <span class="hljs-attr">recordIP:</span> <span class="hljs-literal">true</span><br>  <span class="hljs-attr">serverURLs:</span> <span class="hljs-string">&quot;&quot;</span> <span class="hljs-comment"># 自定义域名</span><br>  <span class="hljs-attr">emojiCDN:</span><br>  <span class="hljs-attr">emojiMaps:</span><br>  <span class="hljs-attr">enableQQ:</span> <span class="hljs-literal">false</span><br></code></pre></td></tr></table></figure><p>当前支持的评论插件如下：</p><ul><li><a href="https://valine.js.org/configuration.html">Valine</a>:基于 LeanCloud</li><li><a href="https://waline.js.org/">Waline</a>: 从 Valine 衍生而来，额外增加了服务端和多种功能</li><li><a href="https://github.com/gitalk/gitalk">Gitalk</a>: 基于 GitHub Issues</li><li><a href="https://utteranc.es/">Utterances</a>: 基于 GitHub Issues</li><li><a href="https://disqus.com/">Disqus</a>: 基于第三方的服务</li><li><a href="http://changyan.kuaizhan.com/">畅言</a>: 基于第三方的服务</li><li><a href="https://www.livere.com/">来必力(Livere)</a>: 基于第三方的服务</li><li><a href="https://remark42.com/">Remark42</a>: 需要自托管服务端</li><li><a href="https://twikoo.js.org/">Twikoo</a>: 基于腾讯云开发</li><li><a href="https://cusdis.com/">Cusdis</a>: 基于第三方服务或自托管服务</li><li><a href="https://giscus.app/zh-CN">Giscus</a>: 基于 GitHub Discussion</li></ul><p>使用方式和参数设置请点击上面链接查看各自的文档。</p><p>若想自己添加新的评论插件，可通过<a href="https://hexo.fluid-dev.com/docs/guide/#%E8%87%AA%E5%AE%9A%E4%B9%89-js-css-html">自定义功能</a>加入 <code>&lt;script&gt;</code>，并判断是否存在 <code>#comments</code> 元素进行挂载。</p><blockquote><p>TIP：</p><p>国内用户推荐使用 Valine、Waline 或者 twikoo</p><p>如果设置后评论模块没有显示，说明配置没有完成，或者配置有误出现报错（请在浏览器控制台查看具体报错）</p></blockquote><p>如果想在某个文章页关闭评论，或者想在某个自定义页面开启评论，可以通过在 <a href="https://hexo.io/zh-cn/docs/front-matter">Front-matter </a>设置 <code>comment: bool</code> 来控制评论开关，或者通过 <code>comment: &#39;type&#39;</code> 来开启指定的评论插件。</p><p>例如，在关于页开启并指定评论插件：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">关于页</span><br><span class="hljs-attr">layout:</span> <span class="hljs-string">about</span><br><span class="hljs-attr">index_img:</span> <span class="hljs-string">/img/example.jpg</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2019-10-10 10:00:00</span><br><span class="hljs-attr">comment:</span> <span class="hljs-string">&quot;valine&quot;</span><br><span class="hljs-meta">---</span><br><span class="hljs-string">以下是正文内容</span><br></code></pre></td></tr></table></figure><h3 id="6-config-yml"><a href="#6-config-yml" class="headerlink" title="6. _config.yml"></a>6. _config.yml</h3><p>这里的注释是英文的，可能看起来不是那么方便，这里主要是两个地方需要修改，其他直接默认就可以了</p><ol><li>最开头的网站信息<br><img src="./631b13ff2befbd4299cbfa12e08aae90.png"></li><li>以及最末尾的部署设置<br><img src="./9a363f6191b2530da0a03c422ce855cc.png"><br>这里可以配置二次元人物，具体就到网上搜索就好了~ 搜<code>live2 看板娘</code></li></ol><h3 id="7-最后"><a href="#7-最后" class="headerlink" title="7. 最后"></a>7. 最后</h3><p>算是一个傻瓜式教程了。。。。省略了非常多的步骤。next 听说可玩度很高，配置之后网页非常好看（但我不喜欢又关我什么事 hhh），next 的贡献者非常多，所以 next 主题的维护以及更新等等方面都非常地强。<br>但是！fluid 的简约风真的非常 nice！！！安利一波</p><h3 id="8-小彩蛋"><a href="#8-小彩蛋" class="headerlink" title="8. 小彩蛋"></a>8. 小彩蛋</h3><p>对了，在设置 banner_img 的时候，由于 banner 比较大，所以把图片放大之后非常地模糊。。。所以这个也让我浪费了非常多时间在找高清图以及增强图片清晰度的方法</p><ul><li>增强图片清晰度的方法：<ul><li>用 ps：emmm…难度有点大，ps 小白表示不想</li><li>一些 ai 图像修复网站：傻瓜式操作，还不错</li></ul></li><li>一些高清图片的网站<br>这个是我后来在 fluid 的博客上看到的…应该早点看到，泪目<ul><li><a href="https://wallpaperhub.app/">https://wallpaperhub.app/</a></li><li><a href="https://wallhaven.cc/">https://wallhaven.cc/</a></li><li><a href="https://unsplash.com/">https://unsplash.com/</a></li></ul></li></ul>]]></content>
    
    
    <categories>
      
      <category>Notes</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hello World</title>
    <link href="/2023/08/24/hello-world/"/>
    <url>/2023/08/24/hello-world/</url>
    
    <content type="html"><![CDATA[<p>Welcome to <a href="https://hexo.io/">Hexo</a>! This is your very first post. Check <a href="https://hexo.io/docs/">documentation</a> for more info. If you get any problems when using Hexo, you can find the answer in <a href="https://hexo.io/docs/troubleshooting.html">troubleshooting</a> or you can ask me on <a href="https://github.com/hexojs/hexo/issues">GitHub</a>.</p><h2 id="Quick-Start"><a href="#Quick-Start" class="headerlink" title="Quick Start"></a>Quick Start</h2><h3 id="Create-a-new-post"><a href="#Create-a-new-post" class="headerlink" title="Create a new post"></a>Create a new post</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo new <span class="hljs-string">&quot;My New Post&quot;</span><br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/writing.html">Writing</a></p><h3 id="Run-server"><a href="#Run-server" class="headerlink" title="Run server"></a>Run server</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo server<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/server.html">Server</a></p><h3 id="Generate-static-files"><a href="#Generate-static-files" class="headerlink" title="Generate static files"></a>Generate static files</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo generate<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/generating.html">Generating</a></p><h3 id="Deploy-to-remote-sites"><a href="#Deploy-to-remote-sites" class="headerlink" title="Deploy to remote sites"></a>Deploy to remote sites</h3><figure class="highlight bash"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs bash">$ hexo deploy<br></code></pre></td></tr></table></figure><p>More info: <a href="https://hexo.io/docs/one-command-deployment.html">Deployment</a></p>]]></content>
    
    
    <categories>
      
      <category>Notes</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  <entry>
    <title>Hexo</title>
    <link href="/2023/08/24/hexo/"/>
    <url>/2023/08/24/hexo/</url>
    
    <content type="html"><![CDATA[<p>一些命令和插件使用规则.</p><span id="more"></span><h1 id="hexo-基本命令"><a href="#hexo-基本命令" class="headerlink" title="hexo 基本命令"></a>hexo 基本命令</h1><p>让我们先认识一下 Hexo 的一些命令，再对博客进行个性化配置。先进入 Hexo 博客安装的文件夹目录 :</p><ul><li><p><code>hexo clean</code>: 清除生成的静态文件和缓存；</p></li><li><p><code>hexo generate</code>: 生成静态文件，可以简写为 <code>hexo g</code> ;</p><ul><li><code>hexo generate -d</code>: 生成静态文件后将其部署，相当于 <code>hexo generate &amp;&amp; hexo deploy</code>，可以简写为 <code>hexo g -d</code>；</li></ul></li><li><p><code>hexo server</code> : 启动网站服务，此时可以在浏览器中访问网站，可以简写为<code>hexo s</code>；</p><ul><li><code>hexo server --port [port]</code>: 指定服务端口，可以简写为 <code>hexo s -p [port]</code>；</li><li><code>hexo server --open</code>: 启动服务后立即在本机默认浏览器中打开网站，可以简写为 <code>hexo s -o</code>；</li></ul></li><li><p>hexo deploy: 用于部署静态文件到远端服务器或平台，可以简写为 hexo s -o ；</p><ul><li><code>hexo deploy -g</code>: 部署前生成静态文件，相当于 <code>hexo generate &amp;&amp; hexo deploy</code>，可以简写为 <code>hexo d -g</code>。</li></ul></li></ul><h2 id="组合命令"><a href="#组合命令" class="headerlink" title="组合命令"></a>组合命令</h2><p>大多数时候我们只需要用到两个组合命令。</p><ul><li><code>preview: hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server --port 80 --open</code>:</li></ul><p>重新生成静态文件后在 80 端口启动网站服务并打开网页预览博客。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo server --port 80 --open<br></code></pre></td></tr></table></figure><ul><li><code>publish: hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy</code>：</li></ul><p>重新生成静态文件后部署到远端服务器或平台。</p><figure class="highlight sh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs sh">hexo clean &amp;&amp; hexo generate &amp;&amp; hexo deploy<br></code></pre></td></tr></table></figure><p>读者们可以尝试在本地运行一下 <code>preview</code> 命令，浏览器将自动打开 <code>localhost</code>，你将看到你的初始博客的样子。在后续的配置中，你可以随时运行该命令来查看你的修改所起的效果。</p><h1 id="jsDelivr"><a href="#jsDelivr" class="headerlink" title="jsDelivr"></a>jsDelivr</h1><h2 id="通过jsDelivr引用资源"><a href="#通过jsDelivr引用资源" class="headerlink" title="通过jsDelivr引用资源"></a>通过jsDelivr引用资源</h2><p>使用方法：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">[https://cdn.jsdelivr.net/gh/]你的用户名/你的仓库名@发布的版本号/文件路径<br></code></pre></td></tr></table></figure><p>例如：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs text">https://cdn.jsdelivr.net/gh/xm0316/xm0316.github.io/img/banner.png<br></code></pre></td></tr></table></figure><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs text">https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@1.0/images/trhx.png<br>https://cdn.jsdelivr.net/gh/TRHX/CDN-for-itrhx.com@2.0.1/css/style.css<br>https://cdn.jsdelivr.net/gh/moezx/cdn@3.1.3//The%20Pet%20Girl%20of%20Sakurasou.mp4<br></code></pre></td></tr></table></figure><p>注意：版本号不是必需的，是为了区分新旧资源，如果不使用版本号，将会直接引用最新资源，除此之外还可以使用某个范围内的版本，查看所有资源等，具体使用方法如下：</p><figure class="highlight text"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br><span class="line">7</span><br><span class="line">8</span><br><span class="line">9</span><br><span class="line">10</span><br><span class="line">11</span><br><span class="line">12</span><br><span class="line">13</span><br><span class="line">14</span><br><span class="line">15</span><br><span class="line">16</span><br><span class="line">17</span><br><span class="line">18</span><br></pre></td><td class="code"><pre><code class="hljs text">// 加载任何Github发布、提交或分支<br>https://cdn.jsdelivr.net/gh/user/repo@version/file<br><br>// 加载 jQuery v3.2.1<br>https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/dist/jquery.min.js<br><br>// 使用版本范围而不是特定版本<br>https://cdn.jsdelivr.net/gh/jquery/jquery@3.2/dist/jquery.min.js<br>https://cdn.jsdelivr.net/gh/jquery/jquery@3/dist/jquery.min.js<br><br>// 完全省略该版本以获取最新版本<br>https://cdn.jsdelivr.net/gh/jquery/jquery/dist/jquery.min.js<br><br>// 将“.min”添加到任何JS/CSS文件中以获取缩小版本，如果不存在，将为会自动生成<br>https://cdn.jsdelivr.net/gh/jquery/jquery@3.2.1/src/core.min.js<br><br>// 在末尾添加 / 以获取资源目录列表<br>https://cdn.jsdelivr.net/gh/jquery/jquery/<br></code></pre></td></tr></table></figure><h1 id="Front-matter"><a href="#Front-matter" class="headerlink" title="Front-matter"></a>Front-matter</h1><p>Front-matter 是文件最上方以 <code>---</code> 分隔的区域，用于指定个别文件的变量，举例来说：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-meta">---</span><br><span class="hljs-attr">title:</span> <span class="hljs-string">Hello</span> <span class="hljs-string">World</span><br><span class="hljs-attr">date:</span> <span class="hljs-number">2013</span><span class="hljs-string">/7/13</span> <span class="hljs-number">20</span><span class="hljs-string">:46:25</span><br><span class="hljs-meta">---</span><br></code></pre></td></tr></table></figure><h2 id="参数"><a href="#参数" class="headerlink" title="参数"></a>参数</h2><p>以下是预先定义的参数，您可在模板中使用这些参数值并加以利用。</p><blockquote><p><code>excerpt</code>:</p><p>​用于编写纯文本摘要</p></blockquote><table><thead><tr><th align="left">参数</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>layout</code></td><td align="left">布局</td><td align="left"><a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>config.default_layout</code></a></td></tr><tr><td align="left"><code>title</code></td><td align="left">标题</td><td align="left">文章的文件名</td></tr><tr><td align="left"><code>date</code></td><td align="left">建立日期</td><td align="left">文件建立日期</td></tr><tr><td align="left"><code>updated</code></td><td align="left">更新日期</td><td align="left">文件更新日期</td></tr><tr><td align="left"><code>comments</code></td><td align="left">开启文章的评论功能</td><td align="left">true</td></tr><tr><td align="left"><code>tags</code></td><td align="left">标签（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>categories</code></td><td align="left">分类（不适用于分页）</td><td align="left"></td></tr><tr><td align="left"><code>permalink</code></td><td align="left">覆盖文章的永久链接，永久链接应该以 <code>/</code> 或 <code>.html</code> 结尾</td><td align="left"><code>null</code></td></tr><tr><td align="left"><code>excerpt</code></td><td align="left">纯文本的页面摘要。使用 <a href="https://hexo.io/zh-cn/docs/tag-plugins#%E6%96%87%E7%AB%A0%E6%91%98%E8%A6%81%E5%92%8C%E6%88%AA%E6%96%AD">该插件</a> 来格式化文本</td><td align="left"></td></tr><tr><td align="left"><code>disableNunjucks</code></td><td align="left">启用时禁用 Nunjucks 标签 <code>&#123;&#123; &#125;&#125;</code>&#x2F;<code>&#123;% %&#125;</code> 和 <a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件</a> 的渲染功能</td><td align="left">false</td></tr><tr><td align="left"><code>lang</code></td><td align="left">设置语言以覆盖 <a href="https://hexo.io/zh-cn/docs/internationalization#%E8%B7%AF%E5%BE%84">自动检测</a></td><td align="left">继承自 <code>_config.yml</code></td></tr></tbody></table><h2 id="布局"><a href="#布局" class="headerlink" title="布局"></a>布局</h2><p>根据 <code>_config.yml</code> 中 <a href="https://hexo.io/zh-cn/docs/configuration#%E6%96%87%E7%AB%A0"><code>default_layout</code></a> 的设置，默认布局是 <code>post</code> 。当文章中的布局被禁用(<code>layout: false</code>)，它将不会使用主题处理。然而，它仍然会被任何可用的渲染引擎渲染：如果一篇文章是用 Markdown 写的，并且安装了 Markdown 渲染引擎（比如默认的 <a href="https://github.com/hexojs/hexo-renderer-marked">hexo-renderer-marked</a>)，它将被渲染成HTML。</p><p>除非通过 <code>disableNunjucks</code> 设置或 <a href="https://hexo.io/zh-cn/api/renderer#%E7%A6%81%E7%94%A8-Nunjucks-%E6%A0%87%E7%AD%BE">渲染引擎</a> 禁用，否则无论布局如何，<a href="https://hexo.io/zh-cn/docs/tag-plugins">标签插件</a> 总是被处理。</p><h2 id="分类和标签"><a href="#分类和标签" class="headerlink" title="分类和标签"></a>分类和标签</h2><p>只有文章支持分类和标签，您可以在 Front-matter 中设置。在其他系统中，分类和标签听起来很接近，但是在 Hexo 中两者有着明显的差别：分类具有顺序性和层次性，也就是说 <code>Foo, Bar</code> 不等于 <code>Bar, Foo</code>；而标签没有顺序和层次。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Diary</span><br><span class="hljs-attr">tags:</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">PS3</span><br><span class="hljs-bullet">-</span> <span class="hljs-string">Games</span><br></code></pre></td></tr></table></figure><h3 id="分类方法的分歧"><a href="#分类方法的分歧" class="headerlink" title="分类方法的分歧"></a>分类方法的分歧</h3><p>如果您有过使用 WordPress 的经验，就很容易误解 Hexo 的分类方式。WordPress 支持对一篇文章设置多个分类，而且这些分类可以是同级的，也可以是父子分类。但是 Hexo 不支持指定多个同级分类。下面的指定方法：</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">categories:</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Diary</span><br>  <span class="hljs-bullet">-</span> <span class="hljs-string">Life</span><br></code></pre></td></tr></table></figure><p>会使分类 <code>Life</code> 成为 <code>Diary</code> 的子分类，而不是并列分类。因此，有必要为您的文章选择尽可能准确的分类。</p><p>如果你需要为文章添加多个分类，可以尝试以下 list 中的方法。</p><figure class="highlight yaml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs yaml"><span class="hljs-attr">categories:</span><br><span class="hljs-bullet">-</span> [<span class="hljs-string">Diary</span>, <span class="hljs-string">PlayStation</span>]<br><span class="hljs-bullet">-</span> [<span class="hljs-string">Diary</span>, <span class="hljs-string">Games</span>]<br><span class="hljs-bullet">-</span> [<span class="hljs-string">Life</span>]<br></code></pre></td></tr></table></figure><p>此时这篇文章同时包括三个分类： <code>PlayStation</code> 和 <code>Games</code> 分别都是父分类 <code>Diary</code> 的子分类，同时 <code>Life</code> 是一个没有子分类的分类。</p><h2 id="JSON-Front-matter"><a href="#JSON-Front-matter" class="headerlink" title="JSON Front-matter"></a>JSON Front-matter</h2><p>除了 YAML 外，你也可以使用 JSON 来编写 Front-matter，只要将 <code>---</code> 代换成 <code>;;;</code> 即可。</p><figure class="highlight json"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs json"><span class="hljs-attr">&quot;title&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;Hello World&quot;</span><span class="hljs-punctuation">,</span><br><span class="hljs-attr">&quot;date&quot;</span><span class="hljs-punctuation">:</span> <span class="hljs-string">&quot;2013/7/13 20:46:25&quot;</span><br>;;;<br></code></pre></td></tr></table></figure><h1 id="标签插件（Tag-Plugins）语法"><a href="#标签插件（Tag-Plugins）语法" class="headerlink" title="标签插件（Tag Plugins）语法"></a>标签插件（Tag Plugins）语法</h1><p>标签插件和 Front-matter 中的标签不同，它们是用于在文章中快速插入特定内容的插件。</p><p>虽然你可以使用<strong>任何格式书写你的文章，但是标签插件永远可用，且语法也都是一致的。</strong></p><p><em>标签插件不应该被包裹在 Markdown 语法中，例如： <code>[](&#123;% post_path lorem-ipsum %&#125;)</code> 是不被支持的。</em></p><h2 id="引用块"><a href="#引用块" class="headerlink" title="引用块"></a>引用块</h2><p>在文章中插入引言，可包含作者、来源和标题。</p><p><strong>别号：</strong> quote</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;% <span class="hljs-selector-tag">blockquote</span> <span class="hljs-selector-attr">[author[, source]</span>] <span class="hljs-selector-attr">[link]</span> <span class="hljs-selector-attr">[source_link_title]</span> %&#125;<br><span class="hljs-attribute">content</span><br>&#123;% endblockquote %&#125;<br></code></pre></td></tr></table></figure><h3 id="示例"><a href="#示例" class="headerlink" title="示例"></a>示例</h3><p><strong>没有提供参数，则只输出普通的 blockquote</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">blockquote</span> %&#125;</span><span class="language-xml"></span><br><span class="language-xml">Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endblockquote</span> %&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>Lorem ipsum dolor sit amet, consectetur adipiscing elit. Pellentesque hendrerit lacus ut purus iaculis feugiat. Sed nec tempor elit, quis aliquam neque. Curabitur sed diam eget dolor fermentum semper at eu lorem.</p></blockquote><p><strong>引用书上的句子</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">blockquote</span> David Levithan, Wide Awake %&#125;</span><span class="language-xml"></span><br><span class="language-xml">Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endblockquote</span> %&#125;</span><br></code></pre></td></tr></table></figure><blockquote><p>Do not just seek happiness for yourself. Seek happiness for all. Through kindness. Through mercy.</p><p><strong>David Levithan</strong>Wide Awake</p></blockquote><p><strong>引用 Twitter</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">&#123;% blockquote @DevDocs https:<span class="hljs-regexp">//</span>twitter.com<span class="hljs-regexp">/devdocs/</span>status/<span class="hljs-number">356095192085962752</span> %&#125;<br>NEW: DevDocs now comes with syntax highlighting. http:<span class="hljs-regexp">//</span>devdocs.io<br>&#123;% endblockquote %&#125;<br></code></pre></td></tr></table></figure><blockquote><p>NEW: DevDocs now comes with syntax highlighting. <a href="http://devdocs.io/">http://devdocs.io</a></p><p><strong>@DevDocs</strong><a href="https://twitter.com/devdocs/status/356095192085962752">twitter.com&#x2F;devdocs&#x2F;status&#x2F;356095192085962752</a></p></blockquote><p><strong>引用网络上的文章</strong></p><figure class="highlight awk"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs awk">&#123;% blockquote Seth Godin http:<span class="hljs-regexp">//</span>sethgodin.typepad.com<span class="hljs-regexp">/seths_blog/</span><span class="hljs-number">2009</span><span class="hljs-regexp">/07/</span>welcome-to-island-marketing.html Welcome to Island Marketing %&#125;<br>Every interaction is both precious and an opportunity to delight.<br>&#123;% endblockquote %&#125;<br></code></pre></td></tr></table></figure><blockquote><p>Every interaction is both precious and an opportunity to delight.</p><p><strong>Seth Godin</strong><a href="http://sethgodin.typepad.com/seths_blog/2009/07/welcome-to-island-marketing.html">Welcome to Island Marketing</a></p></blockquote><h2 id="代码块"><a href="#代码块" class="headerlink" title="代码块"></a>代码块</h2><p>在文章中插入代码。</p><p><strong>别名：</strong> code</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;% codeblock <span class="hljs-selector-attr">[title]</span> <span class="hljs-selector-attr">[lang:language]</span> <span class="hljs-selector-attr">[url]</span> <span class="hljs-selector-attr">[link text]</span> <span class="hljs-selector-attr">[additional options]</span> %&#125;<br><span class="hljs-selector-tag">code</span> snippet<br>&#123;% endcodeblock %&#125;<br></code></pre></td></tr></table></figure><p>以 <code>option:value</code> 的格式指定额外选项，例如：<code>line_number:false first_line:5</code>。</p><table><thead><tr><th align="left">额外选项</th><th align="left">描述</th><th align="left">默认值</th></tr></thead><tbody><tr><td align="left"><code>line_number</code></td><td align="left">显示行号</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>line_threshold</code></td><td align="left">只有代码块的行数超过该阈值，才显示行数</td><td align="left"><code>0</code></td></tr><tr><td align="left"><code>highlight</code></td><td align="left">启用代码高亮</td><td align="left"><code>true</code></td></tr><tr><td align="left"><code>first_line</code></td><td align="left">指定第一个行号</td><td align="left"><code>1</code></td></tr><tr><td align="left"><code>mark</code></td><td align="left">突出显示特定的行，每个值用逗号分隔。 使用破折号指定数字范围 例如： <code>mark:1,4-7,10</code> 将标记第1、4至7和10行</td><td align="left"></td></tr><tr><td align="left"><code>wrap</code></td><td align="left">用 <a href="https://developer.mozilla.org/en-US/docs/Web/HTML/Element/table">&#96;&#96;</a> 包裹代码块</td><td align="left"><code>true</code></td></tr></tbody></table><h3 id="示例-1"><a href="#示例-1" class="headerlink" title="示例"></a>示例</h3><p><strong>普通的代码块</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">codeblock</span> %&#125;</span><span class="language-xml"></span><br><span class="language-xml">alert(&#x27;Hello World!&#x27;);</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endcodeblock</span> %&#125;</span><span class="language-xml"></span><br><span class="language-xml">alert(&#x27;Hello World!&#x27;);</span><br></code></pre></td></tr></table></figure><p><strong>指定语言</strong></p><figure class="highlight maxima"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs maxima">&#123;<span class="hljs-symbol">%</span> codeblock lang:objc <span class="hljs-symbol">%</span>&#125;<br>[<span class="hljs-built_in">rectangle</span> setX: <span class="hljs-number">10</span> y: <span class="hljs-number">10</span> <span class="hljs-built_in">width</span>: <span class="hljs-number">20</span> <span class="hljs-built_in">height</span>: <span class="hljs-number">20</span>];<br>&#123;<span class="hljs-symbol">%</span> endcodeblock <span class="hljs-symbol">%</span>&#125;<br>[<span class="hljs-built_in">rectangle</span> setX: <span class="hljs-number">10</span> y: <span class="hljs-number">10</span> <span class="hljs-built_in">width</span>: <span class="hljs-number">20</span> <span class="hljs-built_in">height</span>: <span class="hljs-number">20</span>];<br></code></pre></td></tr></table></figure><p><strong>附加说明</strong></p><figure class="highlight arcade"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br></pre></td><td class="code"><pre><code class="hljs arcade">&#123;% codeblock <span class="hljs-built_in">Array</span>.<span class="hljs-built_in">map</span> %&#125;<br><span class="hljs-built_in">array</span>.<span class="hljs-built_in">map</span>(callback[, thisArg])<br>&#123;% endcodeblock %&#125;<br><span class="hljs-built_in">Array</span>.maparray.<span class="hljs-built_in">map</span>(callback[, thisArg])<br></code></pre></td></tr></table></figure><p><strong>附加说明和网址</strong></p><figure class="highlight excel"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br><span class="line">4</span><br><span class="line">5</span><br><span class="line">6</span><br></pre></td><td class="code"><pre><code class="hljs excel">&#123;% codeblock _.compact ht<span class="hljs-symbol">tp:</span>//underscorejs.org/#compact Underscore.js %&#125;<br>_.compact([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-built_in">false</span>, <span class="hljs-number">2</span>, &#x27;&#x27;, <span class="hljs-number">3</span>]);<br>=&gt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br>&#123;% endcodeblock %&#125;<br>_.compactUnderscore.js_.compact([<span class="hljs-number">0</span>, <span class="hljs-number">1</span>, <span class="hljs-built_in">false</span>, <span class="hljs-number">2</span>, &#x27;&#x27;, <span class="hljs-number">3</span>]);<br>=&gt; [<span class="hljs-number">1</span>, <span class="hljs-number">2</span>, <span class="hljs-number">3</span>]<br></code></pre></td></tr></table></figure><h2 id="反引号代码块"><a href="#反引号代码块" class="headerlink" title="反引号代码块"></a>反引号代码块</h2><p>另一种形式的代码块，不同的是它使用三个反引号来包裹。</p><p>`&#96;&#96; [language] [title] [url] [link text] code snippet &#96;&#96;&#96;</p><h2 id="Pull-Quote"><a href="#Pull-Quote" class="headerlink" title="Pull Quote"></a>Pull Quote</h2><p>在文章中插入 Pull quote。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">pullquote</span> [class] %&#125;</span><span class="language-xml"></span><br><span class="language-xml">content</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endpullquote</span> %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="jsFiddle"><a href="#jsFiddle" class="headerlink" title="jsFiddle"></a>jsFiddle</h2><p>在文章中嵌入 jsFiddle。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;% jsfiddle shorttag <span class="hljs-selector-attr">[tabs]</span> <span class="hljs-selector-attr">[skin]</span> <span class="hljs-selector-attr">[width]</span> <span class="hljs-selector-attr">[height]</span> %&#125;<br></code></pre></td></tr></table></figure><h2 id="Gist"><a href="#Gist" class="headerlink" title="Gist"></a>Gist</h2><p>在文章中嵌入 Gist。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">gist</span> gist_id [filename] %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="iframe"><a href="#iframe" class="headerlink" title="iframe"></a>iframe</h2><p>在文章中插入 iframe。</p><figure class="highlight css"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs css">&#123;% <span class="hljs-selector-tag">iframe</span> url <span class="hljs-selector-attr">[width]</span> <span class="hljs-selector-attr">[height]</span> %&#125;<br></code></pre></td></tr></table></figure><h2 id="Image"><a href="#Image" class="headerlink" title="Image"></a>Image</h2><p>在文章中插入指定大小的图片。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&#123;% img [<span class="hljs-keyword">class</span> <span class="hljs-symbol">names</span>] /<span class="hljs-symbol">path</span>/<span class="hljs-symbol">to</span>/<span class="hljs-symbol">image</span> [<span class="hljs-symbol">width</span>] [<span class="hljs-symbol">height</span>] &#x27;&quot;<span class="hljs-symbol">title</span> <span class="hljs-symbol">text</span>&quot; &quot;<span class="hljs-symbol">alt</span> <span class="hljs-symbol">text</span>&quot;&#x27; %&#125;<br></code></pre></td></tr></table></figure><h2 id="Link"><a href="#Link" class="headerlink" title="Link"></a>Link</h2><p>在文章中插入链接，并自动给外部链接添加 <code>target=&quot;_blank&quot;</code> 属性。</p><figure class="highlight scss"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs scss">&#123;% link text url <span class="hljs-selector-attr">[external]</span> <span class="hljs-selector-attr">[title]</span> %&#125;<br></code></pre></td></tr></table></figure><h2 id="Include-Code"><a href="#Include-Code" class="headerlink" title="Include Code"></a>Include Code</h2><p>插入 <code>source/downloads/code</code> 文件夹内的代码文件。<code>source/downloads/code</code> 不是固定的，取决于你在配置文件中 <code>code_dir</code> 的配置。</p><figure class="highlight vim"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs vim">&#123;% include_code [title] [<span class="hljs-keyword">lan</span><span class="hljs-variable">g:language</span>] [from:<span class="hljs-built_in">line</span>] [<span class="hljs-keyword">to</span>:<span class="hljs-built_in">line</span>] path/<span class="hljs-keyword">to</span>/<span class="hljs-keyword">file</span> %&#125;<br></code></pre></td></tr></table></figure><h3 id="示例-2"><a href="#示例-2" class="headerlink" title="示例"></a>示例</h3><p><strong>嵌入 test.js 文件全文</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">include_code</span> lang:javascript test.js %&#125;</span><br></code></pre></td></tr></table></figure><p><strong>只嵌入第 3 行</strong></p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">include</span>_code lang:javascript from:<span class="hljs-number">3</span> to:<span class="hljs-number">3</span> test.js <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p><strong>嵌入第 5 行至第 8 行</strong></p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">include</span>_code lang:javascript from:<span class="hljs-number">5</span> to:<span class="hljs-number">8</span> test.js <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p><strong>嵌入第 5 行至文件结束</strong></p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">include</span>_code lang:javascript from:<span class="hljs-number">5</span> test.js <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p><strong>嵌入第 1 行至第 8 行</strong></p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">include</span>_code lang:javascript to:<span class="hljs-number">8</span> test.js <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Youtube"><a href="#Youtube" class="headerlink" title="Youtube"></a>Youtube</h2><p>在文章中插入 Youtube 视频。</p><figure class="highlight crystal"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crystal"><span class="hljs-template-variable">&#123;% youtube video_id [<span class="hljs-keyword">type</span>] [cookie] %&#125;</span><br></code></pre></td></tr></table></figure><h3 id="示例-3"><a href="#示例-3" class="headerlink" title="示例"></a>示例</h3><p><strong>视频</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">youtube</span> lJIrF4YjHfQ %&#125;</span><br></code></pre></td></tr></table></figure><p><strong>播放列表</strong></p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">youtube</span> PL<span class="hljs-number">9</span>hW<span class="hljs-number">1</span>uS<span class="hljs-number">6</span>HUfscJ<span class="hljs-number">9</span>DHkOSoOX<span class="hljs-number">45</span>MjXduUxo <span class="hljs-string">&#x27;playlist&#x27;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p><strong>隐私模式</strong></p><p>在这种模式下，禁用 YouTube cookie</p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">youtube</span> lJIrF<span class="hljs-number">4</span>YjHfQ false <span class="hljs-template-tag">%&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">youtube</span> PL<span class="hljs-number">9</span>hW<span class="hljs-number">1</span>uS<span class="hljs-number">6</span>HUfscJ<span class="hljs-number">9</span>DHkOSoOX<span class="hljs-number">45</span>MjXduUxo <span class="hljs-string">&#x27;playlist&#x27;</span> false <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><h2 id="Vimeo"><a href="#Vimeo" class="headerlink" title="Vimeo"></a>Vimeo</h2><p>在文章中插入 Vimeo 视频。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">vimeo</span> video_id %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="引用文章"><a href="#引用文章" class="headerlink" title="引用文章"></a>引用文章</h2><p>引用其他文章的链接。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">post_path</span> filename %&#125;</span><span class="language-xml"></span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">post_link</span> filename [title] [escape] %&#125;</span><br></code></pre></td></tr></table></figure><p>在使用此标签时可以忽略文章文件所在的路径或者文章的永久链接信息、如语言、日期。</p><p>例如，在文章中使用 <code>&#123;% post_link how-to-bake-a-cake %&#125;</code> 时，只需有一个名为 <code>how-to-bake-a-cake.md</code> 的文章文件即可。即使这个文件位于站点文件夹的 <code>source/posts/2015-02-my-family-holiday</code> 目录下、或者文章的永久链接是 <code>2018/en/how-to-bake-a-cake</code>，都没有影响。</p><p>默认链接文字是文章的标题，你也可以自定义要显示的文本。</p><p>默认对文章的标题和自定义标题里的特殊字符进行转义。可以使用 <code>escape</code> 选项，禁止对特殊字符进行转义。</p><p>例如：</p><p><strong>链接使用文章的标题</strong></p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">post_link</span> hexo-<span class="hljs-number">3</span>-<span class="hljs-number">8</span>-released <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p><a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/">Hexo 3.8.0 Released</a></p><p><strong>链接使用自定义文字</strong></p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">post_link</span> hexo-<span class="hljs-number">3</span>-<span class="hljs-number">8</span>-released <span class="hljs-string">&#x27;通往文章的链接&#x27;</span> <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p><a href="https://hexo.io/news/2018/10/19/hexo-3-8-released/">通往文章的链接</a></p><p><strong>对标题的特殊字符进行转义</strong></p><figure class="highlight crmsh"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs crmsh">&#123;% post_link hexo-<span class="hljs-number">4</span>-released &#x27;How to use <span class="hljs-tag">&lt;b&gt;</span> <span class="hljs-keyword">tag</span> <span class="hljs-title">in</span> title&#x27; %&#125;<br></code></pre></td></tr></table></figure><p><a href="https://hexo.io/news/2019/10/14/hexo-4-released/">How to use  tag in title</a></p><p><strong>禁止对标题的特殊字符进行转义</strong></p><figure class="highlight twig"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs twig"><span class="hljs-template-tag">&#123;%</span> <span class="hljs-name">post_link</span> hexo-<span class="hljs-number">4</span>-released <span class="hljs-string">&#x27;&lt;b&gt;bold&lt;/b&gt; custom title&#x27;</span> false <span class="hljs-template-tag">%&#125;</span><br></code></pre></td></tr></table></figure><p><a href="https://hexo.io/news/2019/10/14/hexo-4-released/"><strong>bold</strong> custom title</a></p><h2 id="引用资源"><a href="#引用资源" class="headerlink" title="引用资源"></a>引用资源</h2><p>引用文章的资源，与 <a href="https://hexo.io/zh-cn/docs/asset-folders">资源文件夹</a> 一起使用。</p><figure class="highlight angelscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs angelscript">&#123;% asset_path filename %&#125;<br>&#123;% asset_img [<span class="hljs-keyword">class</span> <span class="hljs-symbol">names</span>] <span class="hljs-symbol">slug</span> [<span class="hljs-symbol">width</span>] [<span class="hljs-symbol">height</span>] [<span class="hljs-symbol">title</span> <span class="hljs-symbol">text</span> [<span class="hljs-symbol">alt</span> <span class="hljs-symbol">text</span>]] %&#125;<br>&#123;% asset_link filename [title] [escape] %&#125;<br></code></pre></td></tr></table></figure><h3 id="嵌入图片"><a href="#嵌入图片" class="headerlink" title="嵌入图片"></a>嵌入图片</h3><p><em>hexo-renderer-marked 3.1.0+ 可以（可选）自动解析图片的文章路径，参考 <a href="https://hexo.io/zh-cn/docs/asset-folders#%E4%BD%BF%E7%94%A8-Markdown-%E5%B5%8C%E5%85%A5%E5%9B%BE%E7%89%87">本节</a> 如何启用它。</em></p><p>“foo.jpg” 位于 <code>http://example.com/2020/01/02/hello/foo.jpg</code>。</p><p><strong>默认（无选项）</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">asset_img</span> foo.jpg %&#125;</span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/2020/01/02/hello/foo.jpg&quot;</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>自定义 class 属性</strong></p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">asset_img</span> post-image foo.jpg %&#125;</span><span class="language-xml"></span><br><span class="language-xml"><span class="hljs-tag">&lt;<span class="hljs-name">img</span> <span class="hljs-attr">src</span>=<span class="hljs-string">&quot;/2020/01/02/hello/foo.jpg&quot;</span> <span class="hljs-attr">class</span>=<span class="hljs-string">&quot;post-image&quot;</span>&gt;</span></span><br></code></pre></td></tr></table></figure><p><strong>展示尺寸</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&#123;% asset_img foo.jpg 500 400 %&#125;<br>&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;/2020/01/02/hello/foo.jpg&quot;</span> <span class="hljs-attribute">width</span>=<span class="hljs-string">&quot;500&quot;</span> <span class="hljs-attribute">height</span>=<span class="hljs-string">&quot;400&quot;</span>&gt;<br></code></pre></td></tr></table></figure><p><strong>title 和 alt 属性</strong></p><figure class="highlight routeros"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br></pre></td><td class="code"><pre><code class="hljs routeros">&#123;% asset_img logo.svg <span class="hljs-string">&quot;lorem ipsum&#x27;dolor&#x27;&quot;</span> %&#125;<br>&lt;img <span class="hljs-attribute">src</span>=<span class="hljs-string">&quot;/2020/01/02/hello/foo.jpg&quot;</span> <span class="hljs-attribute">title</span>=<span class="hljs-string">&quot;lorem ipsum&quot;</span> <span class="hljs-attribute">alt</span>=<span class="hljs-string">&quot;dolor&quot;</span>&gt;<br></code></pre></td></tr></table></figure><h2 id="Raw"><a href="#Raw" class="headerlink" title="Raw"></a>Raw</h2><p>如果您想在文章中插入 Swig 标签，可以尝试使用 Raw 标签，以免发生解析异常。</p><figure class="highlight django"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs django"><span class="hljs-template-tag">&#123;% <span class="hljs-name">raw</span> %&#125;</span><span class="language-xml"></span><br><span class="language-xml">content</span><br><span class="language-xml"></span><span class="hljs-template-tag">&#123;% <span class="hljs-name">endraw</span> %&#125;</span><br></code></pre></td></tr></table></figure><h2 id="文章摘要和截断"><a href="#文章摘要和截断" class="headerlink" title="文章摘要和截断"></a><strong>文章摘要和截断</strong></h2><p>在文章中使用 <code>&lt;!-- more --&gt;</code>，那么 <code>&lt;!-- more --&gt;</code> 之前的文字将会被视为摘要。首页中将只出现这部分文字，同时这部分文字也会出现在正文之中。</p><p>例如：</p><figure class="highlight xml"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs xml">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed do eiusmod tempor incididunt ut labore et dolore magna aliqua.<br><span class="hljs-comment">&lt;!-- more --&gt;</span><br>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum.<br></code></pre></td></tr></table></figure><p>首页中将只会出现</p><figure class="highlight actionscript"><table><tr><td class="gutter"><pre><span class="line">1</span><br></pre></td><td class="code"><pre><code class="hljs actionscript">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed <span class="hljs-keyword">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua.<br></code></pre></td></tr></table></figure><p>正文中则会出现</p><figure class="highlight stata"><table><tr><td class="gutter"><pre><span class="line">1</span><br><span class="line">2</span><br><span class="line">3</span><br></pre></td><td class="code"><pre><code class="hljs stata">Lorem ipsum dolor sit amet, consectetur adipiscing elit, sed <span class="hljs-keyword">do</span> eiusmod tempor incididunt ut labore et dolore magna aliqua.<br><br>Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip <span class="hljs-keyword">ex</span> ea commodo consequat. Duis aute irure dolor <span class="hljs-keyword">in</span> reprehenderit <span class="hljs-keyword">in</span> voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt <span class="hljs-keyword">in</span> culpa <span class="hljs-keyword">qui</span> officia deserunt mollit anim id <span class="hljs-keyword">est</span> laborum.<br></code></pre></td></tr></table></figure><p>注意，摘要可能会被 Front Matter 中的 <code>excerpt</code> 覆盖。</p>]]></content>
    
    
    <categories>
      
      <category>Notes</category>
      
      <category>Hexo</category>
      
    </categories>
    
    
    <tags>
      
      <tag>Blog</tag>
      
      <tag>Hexo</tag>
      
    </tags>
    
  </entry>
  
  
  
  
</search>
